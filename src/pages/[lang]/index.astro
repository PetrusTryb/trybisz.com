---
import i18next, {changeLanguage} from "i18next";
import { getEntryBySlug, getCollection } from "astro:content";
import PageLayout from "../../layouts/PageLayout.astro";
import ProjectCard from "../../components/ProjectCard.astro";
import {getProject} from "../../content/config";
export const prerender = false;

changeLanguage(Astro.params.lang);

const about = await getEntryBySlug("about", i18next.language);
const { Content, headings } = await about.render();
let processedProjects = [];
const projects = (await getCollection("projects"))
    .filter((project)=>project.slug.split("/")[1] == i18next.language && project.data.published);
await Promise.all(projects.map(async (project) => {
  if(!project.data.extendedData) {
    console.log("Cache miss for project", project.slug);
    processedProjects.push(await getProject(project.slug, false));
  }
  else {
    console.log("Cache hit for project", project.slug);
    processedProjects.push(project);
  }
}));
processedProjects = processedProjects.sort((a, b) => b.data.publicationDate.valueOf() - a.data.publicationDate.valueOf());
---

<PageLayout title="Piotr Trybisz" description="Talk is cheap, show me the code..." headings={headings}>
  <i slot="header">Talk is cheap, show me the code</i>
  <Content />
  <div class="article-grid">
    {
      processedProjects.map((project) => (
        <ProjectCard project={project} />
      ))
    }
  </div>
</PageLayout>

<style>
  .article-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(190px, 1fr));
    grid-template-rows: auto;
    gap: var(--size-7);
  }
</style>

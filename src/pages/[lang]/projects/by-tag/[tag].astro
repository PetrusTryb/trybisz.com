---
import i18next, {changeLanguage} from "i18next";
import { getCollection } from "astro:content";
import PageLayout from "../../../../layouts/PageLayout.astro";
import ProjectCard from "../../../../components/ProjectCard.astro";
import {getProject} from "../../../../content/config";
export const prerender = false;
const tag = Astro.params.tag;
changeLanguage(Astro.params.lang);

let processedProjects = [];
const projects = (await getCollection("projects"))
    .filter((project)=>project.slug.split("/")[1] == i18next.language);
await Promise.all(projects.map(async (project) => {
  if(!project.data.extendedData) {
    console.log("Cache miss for project", project.slug);
    processedProjects.push(await getProject(project.slug));
  }
  else {
    console.log("Cache hit for project", project.slug);
    processedProjects.push(project);
  }
}));
processedProjects = processedProjects
    .filter((project) => project.data.tags.includes(tag))
    .sort((a, b) => b.data.publicationDate.valueOf() - a.data.publicationDate.valueOf());
---

<PageLayout title={'#'+tag} description={"Projects tagged: #"+tag}>
    <p hidden={processedProjects.length>0}>
        No projects found with tag #{tag}
    </p>
  <div class="article-grid">
    {
      processedProjects.map((project) => (
        <ProjectCard project={project} />
      ))
    }
  </div>
</PageLayout>

<style>
  .article-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(190px, 1fr));
    grid-template-rows: auto;
    gap: var(--size-7);
  }
</style>
